{"version":3,"sources":["components/pdf/pdf.tsx","helpers/helpers.tsx","components/form/form.tsx","containers/App.tsx","reportWebVitals.js","index.js"],"names":["Font","register","family","src","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","fontFamily","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","pageNumber","position","bottom","left","right","MyDocument","props","size","style","Object","entries","values","map","key","value","render","totalPages","fixed","normalizeWcagId","id","replace","Form","useState","criteriaOpened","openCriteria","isPdfDisplayed","displayPDF","formValues","stateValues","criteriaLevels","setCriteriaLevels","handleLevels","level","includes","filter","crit","className","document","fileName","blob","url","loading","error","type","name","checked","onChange","initialValues","onSubmit","setSubmitting","setTimeout","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","wcag","description","guidelines","guideline","ref_id","success_criteria","criteria","index","criterias","critOpen","role","aria-labelledby","htmlFor","as","aria-controls","aria-expanded","onClick","criteriaId","hidden","references","ref","href","target","rel","length","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8fe8a21.chunk.js","sourcesContent":["import React from 'react';\nimport wcag from 'wcag-as-json/src/wcag.json';\nimport { Page, Text, Font, Document, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'Raleway',\n  src: 'http://fonts.gstatic.com/s/raleway/v11/2VvSZU2kb4DZwFfRM4fLQPesZW2xOQ-xsNqO47m55DA.ttf'\n});\n// Create styles\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n    fontFamily: 'Raleway'\n  },\n  author: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n    fontFamily: 'Raleway'\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: 'justify',\n    fontFamily: 'Raleway'\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: 'grey',\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    color: 'grey',\n  },\n});\n\nconst MyDocument = ( props: { values: { [s: string]: unknown; } | ArrayLike<unknown>; }) => {\n  \n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.body}>\n        \n        <Text style={styles.title}>Issues</Text>\n          {Object.entries(props.values).map(([key, value]) => {\n            return <Text key={key} style={styles.text}>{`${key}: ${value}`}</Text>\n          })}\n        <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed /> \n      </Page>\n    </Document>\n  );\n}\n\nexport default MyDocument;\n","const normalizeWcagId = (id: string) => {\n  return id.replace(/\\./g, '_');\n}\n\nconst unNormalizeWcagId = (id: string) => {\n  return id.replace(/\\_/g, '.');\n}\nexport {normalizeWcagId, unNormalizeWcagId}\n","import React, { useState } from \"react\";\nimport { Field, Formik } from \"formik\";\nimport wcag from 'wcag-as-json/src/wcag.json';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport MyDocument from '../pdf/pdf';\nimport { normalizeWcagId } from '../../helpers/helpers';\n\nconst Form = (): JSX.Element => {\n\n  const [criteriaOpened, openCriteria] = useState(['']);\n\n  const toggleCriteria = (criteriaId: string) => {\n    if (criteriaOpened.includes(criteriaId)) {\n      openCriteria(criteriaOpened.filter(crit => crit !== criteriaId));\n    } else {\n      openCriteria([...criteriaOpened, criteriaId]);\n    }\n  };\n\n  const [isPdfDisplayed, displayPDF] = useState(false);\n  const [formValues, stateValues] = useState({});\n  const [criteriaLevels, setCriteriaLevels] = useState(['A', 'AA', 'AAA'])\n\n  const handleLevels = (level: string) => {\n    if (criteriaLevels.includes(level)) {\n      setCriteriaLevels(criteriaLevels.filter(crit => crit !== level));\n    } else {\n      setCriteriaLevels([...criteriaLevels, level]);\n      }\n  }\n\n  return (\n    <main className=\"main\">\n      { isPdfDisplayed ?\n          <PDFDownloadLink document={<MyDocument values={formValues} />} fileName=\"somename.pdf\">\n            {({ blob, url, loading, error }) =>\n              loading ? 'Loading document...' : 'Download now!'\n            }\n          </PDFDownloadLink>\n        :\n        <div>\n          <fieldset className=\"wcag-filter\">\n            <legend>\n              WCAG Level filter\n            </legend>\n            <label>\n              <input type=\"checkbox\" id=\"A\" name=\"criteria-level\" checked={criteriaLevels.includes('A')} onChange={() => handleLevels('A')} />\n              A\n            </label>\n            <label>\n              <input type=\"checkbox\" id=\"AA\" name=\"criteria-level\" checked={criteriaLevels.includes('AA')} onChange={() => handleLevels('AA')} />\n              AA\n            </label>\n            <label>\n              <input type=\"checkbox\" id=\"AAA\" name=\"criteria-level\" checked={criteriaLevels.includes('AAA')} onChange={() => handleLevels('AAA')} />\n              AAA\n            </label>\n          </fieldset>\n\n          <Formik\n            initialValues={{} as { [s: string]: unknown; }}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                stateValues(values);\n                displayPDF(true);\n                setSubmitting(false);\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                {wcag.map(wcag => {\n                  return (\n                    <div key={wcag.ref_id}>\n                      <h2>{wcag.title}</h2>\n                      <p>{wcag.description}</p>\n                      {\n                        wcag.guidelines.map(guideline => {\n                          return (\n                            <div key={guideline.ref_id} className=\"guideline\">\n                              <h3>{guideline.ref_id} {guideline.title}</h3>\n                              {guideline.success_criteria.map((criteria, index, criterias) => {\n                                if (criteriaLevels.includes(criteria.level)) {\n                                  const critOpen = criteriaOpened.includes(`more-${criteria.ref_id}`)\n                                  return (\n                                    <div key={criteria.ref_id}>\n                                      <h4 id={`criteria-${criteria.ref_id}`}>{`${criteria.ref_id}: Level ${criteria.level} - ${criteria.title}`}</h4>\n                                      <div className=\"criteria-description\">{criteria.description}</div>\n                                      <div role=\"group\" aria-labelledby={`criteria-${criteria.ref_id}`}>\n                                        <label>\n                                          <Field type=\"radio\" name={normalizeWcagId(criteria.ref_id)} value=\"success\" />\n                                          Success\n                                        </label>\n                                        <label>\n                                          <Field type=\"radio\" name={normalizeWcagId(criteria.ref_id)} value=\"failed\" />\n                                            Failed\n                                        </label>\n                                        {values[normalizeWcagId(criteria.ref_id)] === \"failed\" &&\n                                          <div className=\"margin-bottom\">\n                                            <label className=\"block\" htmlFor={`${normalizeWcagId(criteria.ref_id)}-comment`}>Comment : </label>\n                                          <Field\n                                              className=\"full-width\"\n                                              as=\"textarea\"\n                                              name={`${normalizeWcagId(criteria.ref_id)}-comment`}\n                                              id={`${normalizeWcagId(criteria.ref_id)}-comment`} />\n                                          </div>\n                                        }\n                                      </div>\n                                      <button\n                                        type=\"button\"\n                                        aria-controls={`more-${criteria.ref_id}`}\n                                        aria-expanded={critOpen ? 'true' : 'false'}\n                                        className=\"accordion-header\"\n                                        onClick={() => toggleCriteria(`more-${criteria.ref_id}`)}> See how to acheive criteria </button>\n                                      <div id={`more-${criteria.ref_id}`} role=\"region\" className=\"accordion-panel\" hidden={critOpen ? false : true}>\n                                        {criteria.references.map((ref: { url?: string | undefined; title: string; }, index: number) => {\n                                          return ref.url ? (<div key={index}><a href={ref.url} target=\"_blank\" rel=\"noreferrer\">{ref.title}</a></div>) : null;\n                                        })}\n                                      </div>\n                                      {(index !== criterias.length - 1) && <hr />}\n                                    </div>\n                                  )\n                                } else {\n                                  return null;\n                                }\n                                \n                              })}\n                            </div>\n                          )\n                        })\n                      }\n                    </div>\n                  )\n                })}\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Generate report PDF\n            </button>\n              </form>\n            )}\n          </Formik>\n        </div>}\n    </main>\n  )\n};\n\nexport default Form;\n","import Form from '../components/form/form';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Accessibility audit tool</h1>\n        <nav></nav>\n      </header>\n      <Form />\n      <footer>\n        footer\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}