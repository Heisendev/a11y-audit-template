{"version":3,"sources":["helpers/helpers.tsx","components/pdf/pdf.tsx","components/form/form.tsx","containers/App.tsx","reportWebVitals.js","index.js"],"names":["normalizeWcagId","id","replace","Font","register","family","src","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","fontFamily","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","pageNumber","position","bottom","left","right","MyDocument","props","size","style","Object","entries","values","map","key","value","render","totalPages","fixed","Form","useState","criteriaOpened","openCriteria","isPdfDisplayed","displayPDF","formValues","stateValues","criteriaLevels","setCriteriaLevels","handleLevels","level","includes","filter","crit","className","document","fileName","blob","url","loading","error","type","name","checked","onChange","initialValues","onSubmit","setSubmitting","setTimeout","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","wcag","description","guidelines","guideline","ref_id","success_criteria","criteria","index","criterias","critOpen","role","aria-labelledby","htmlFor","as","aria-controls","aria-expanded","onClick","criteriaId","hidden","references","ref","href","target","rel","length","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae7ac8c1.chunk.js","sourcesContent":["const normalizeWcagId = (id: string): string => {\n    return id.replace(/\\./g, '_');\n};\n\nconst unNormalizeWcagId = (id: string): string => {\n    return id.replace(/_/g, '.');\n};\nexport { normalizeWcagId, unNormalizeWcagId };\n","import React from 'react';\nimport { Document, Font, Page, StyleSheet, Text } from '@react-pdf/renderer';\n\nFont.register({\n    family: 'Raleway',\n    src: 'http://fonts.gstatic.com/s/raleway/v11/2VvSZU2kb4DZwFfRM4fLQPesZW2xOQ-xsNqO47m55DA.ttf',\n});\n// Create styles\nconst styles = StyleSheet.create({\n    body: {\n        paddingTop: 35,\n        paddingBottom: 65,\n        paddingHorizontal: 35,\n    },\n    title: {\n        fontSize: 24,\n        textAlign: 'center',\n        fontFamily: 'Raleway',\n    },\n    author: {\n        fontSize: 12,\n        textAlign: 'center',\n        marginBottom: 40,\n    },\n    subtitle: {\n        fontSize: 18,\n        margin: 12,\n        fontFamily: 'Raleway',\n    },\n    text: {\n        margin: 12,\n        fontSize: 14,\n        textAlign: 'justify',\n        fontFamily: 'Raleway',\n    },\n    image: {\n        marginVertical: 15,\n        marginHorizontal: 100,\n    },\n    header: {\n        fontSize: 12,\n        marginBottom: 20,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    pageNumber: {\n        position: 'absolute',\n        fontSize: 12,\n        bottom: 30,\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n        color: 'grey',\n    },\n});\n\nconst MyDocument = (props: {\n    values: { [s: string]: unknown } | ArrayLike<unknown>;\n}): JSX.Element => {\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.body}>\n                <Text style={styles.title}>Issues</Text>\n                {Object.entries(props.values).map(([key, value]) => {\n                    return <Text key={key} style={styles.text}>{`${key}: ${value}`}</Text>;\n                })}\n                <Text\n                    style={styles.pageNumber}\n                    render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\n                    fixed\n                />\n            </Page>\n        </Document>\n    );\n};\n\nexport default MyDocument;\n","import React, { useState } from 'react';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { Field, Formik } from 'formik';\nimport wcag from 'wcag-as-json/src/wcag.json';\n\nimport { normalizeWcagId } from '../../helpers/helpers';\nimport MyDocument from '../pdf/pdf';\n\nconst Form = (): JSX.Element => {\n    const [criteriaOpened, openCriteria] = useState(['']);\n\n    const toggleCriteria = (criteriaId: string) => {\n        if (criteriaOpened.includes(criteriaId)) {\n            openCriteria(criteriaOpened.filter((crit) => crit !== criteriaId));\n        } else {\n            openCriteria([...criteriaOpened, criteriaId]);\n        }\n    };\n\n    const [isPdfDisplayed, displayPDF] = useState(false);\n    const [formValues, stateValues] = useState({});\n    const [criteriaLevels, setCriteriaLevels] = useState(['A', 'AA', 'AAA']);\n\n    const handleLevels = (level: string) => {\n        if (criteriaLevels.includes(level)) {\n            setCriteriaLevels(criteriaLevels.filter((crit) => crit !== level));\n        } else {\n            setCriteriaLevels([...criteriaLevels, level]);\n        }\n    };\n\n    return (\n        <main className=\"main\">\n            {isPdfDisplayed ? (\n                <PDFDownloadLink\n                    document={<MyDocument values={formValues} />}\n                    fileName=\"somename.pdf\"\n                >\n                    {({ blob, url, loading, error }) =>\n                        loading ? 'Loading document...' : 'Download now!'\n                    }\n                </PDFDownloadLink>\n            ) : (\n                <div>\n                    <fieldset className=\"wcag-filter\">\n                        <legend>WCAG Level filter</legend>\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                id=\"A\"\n                                name=\"criteria-level\"\n                                checked={criteriaLevels.includes('A')}\n                                onChange={() => handleLevels('A')}\n                            />\n                            A\n                        </label>\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                id=\"AA\"\n                                name=\"criteria-level\"\n                                checked={criteriaLevels.includes('AA')}\n                                onChange={() => handleLevels('AA')}\n                            />\n                            AA\n                        </label>\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                id=\"AAA\"\n                                name=\"criteria-level\"\n                                checked={criteriaLevels.includes('AAA')}\n                                onChange={() => handleLevels('AAA')}\n                            />\n                            AAA\n                        </label>\n                    </fieldset>\n\n                    <Formik\n                        initialValues={{} as { [s: string]: unknown }}\n                        onSubmit={(values, { setSubmitting }) => {\n                            setTimeout(() => {\n                                stateValues(values);\n                                displayPDF(true);\n                                setSubmitting(false);\n                            }, 400);\n                        }}\n                    >\n                        {({\n                            values,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                            isSubmitting,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                {wcag.map((wcag) => {\n                                    return (\n                                        <div key={wcag.ref_id}>\n                                            <h2>{wcag.title}</h2>\n                                            <p>{wcag.description}</p>\n                                            {wcag.guidelines.map((guideline) => {\n                                                return (\n                                                    <div\n                                                        key={guideline.ref_id}\n                                                        className=\"guideline\"\n                                                    >\n                                                        <h3>\n                                                            {guideline.ref_id} {guideline.title}\n                                                        </h3>\n                                                        {guideline.success_criteria.map(\n                                                            (criteria, index, criterias) => {\n                                                                if (\n                                                                    criteriaLevels.includes(\n                                                                        criteria.level,\n                                                                    )\n                                                                ) {\n                                                                    const critOpen = criteriaOpened.includes(\n                                                                        `more-${criteria.ref_id}`,\n                                                                    );\n                                                                    return (\n                                                                        <div key={criteria.ref_id}>\n                                                                            <h4\n                                                                                id={`criteria-${criteria.ref_id}`}\n                                                                            >{`${criteria.ref_id}: Level ${criteria.level} - ${criteria.title}`}</h4>\n                                                                            <div className=\"criteria-description\">\n                                                                                {\n                                                                                    criteria.description\n                                                                                }\n                                                                            </div>\n                                                                            <div\n                                                                                role=\"group\"\n                                                                                aria-labelledby={`criteria-${criteria.ref_id}`}\n                                                                            >\n                                                                                <label\n                                                                                    htmlFor={`${normalizeWcagId(\n                                                                                        criteria.ref_id,\n                                                                                    )}-success`}\n                                                                                >\n                                                                                    <Field\n                                                                                        type=\"radio\"\n                                                                                        name={normalizeWcagId(\n                                                                                            criteria.ref_id,\n                                                                                        )}\n                                                                                        id={`${normalizeWcagId(\n                                                                                            criteria.ref_id,\n                                                                                        )}-success`}\n                                                                                        value=\"success\"\n                                                                                    />\n                                                                                    Success\n                                                                                </label>\n                                                                                <label\n                                                                                    htmlFor={`${normalizeWcagId(\n                                                                                        criteria.ref_id,\n                                                                                    )}-failed`}\n                                                                                >\n                                                                                    <Field\n                                                                                        type=\"radio\"\n                                                                                        name={normalizeWcagId(\n                                                                                            criteria.ref_id,\n                                                                                        )}\n                                                                                        id={`${normalizeWcagId(\n                                                                                            criteria.ref_id,\n                                                                                        )}-failed`}\n                                                                                        value=\"failed\"\n                                                                                    />\n                                                                                    Failed\n                                                                                </label>\n                                                                                {values[\n                                                                                    normalizeWcagId(\n                                                                                        criteria.ref_id,\n                                                                                    )\n                                                                                ] === 'failed' && (\n                                                                                    <div className=\"margin-bottom\">\n                                                                                        <label\n                                                                                            className=\"block\"\n                                                                                            htmlFor={`${normalizeWcagId(\n                                                                                                criteria.ref_id,\n                                                                                            )}-comment`}\n                                                                                        >\n                                                                                            Comment\n                                                                                            :{' '}\n                                                                                        </label>\n                                                                                        <Field\n                                                                                            className=\"full-width\"\n                                                                                            as=\"textarea\"\n                                                                                            name={`${normalizeWcagId(\n                                                                                                criteria.ref_id,\n                                                                                            )}-comment`}\n                                                                                            id={`${normalizeWcagId(\n                                                                                                criteria.ref_id,\n                                                                                            )}-comment`}\n                                                                                        />\n                                                                                    </div>\n                                                                                )}\n                                                                            </div>\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                aria-controls={`more-${criteria.ref_id}`}\n                                                                                aria-expanded={\n                                                                                    critOpen\n                                                                                        ? 'true'\n                                                                                        : 'false'\n                                                                                }\n                                                                                className=\"accordion-header\"\n                                                                                onClick={() =>\n                                                                                    toggleCriteria(\n                                                                                        `more-${criteria.ref_id}`,\n                                                                                    )\n                                                                                }\n                                                                            >\n                                                                                {' '}\n                                                                                See how to acheive\n                                                                                criteria{' '}\n                                                                            </button>\n                                                                            <div\n                                                                                id={`more-${criteria.ref_id}`}\n                                                                                role=\"region\"\n                                                                                className=\"accordion-panel\"\n                                                                                hidden={\n                                                                                    critOpen\n                                                                                        ? false\n                                                                                        : true\n                                                                                }\n                                                                            >\n                                                                                {criteria.references.map(\n                                                                                    (\n                                                                                        ref: {\n                                                                                            url?:\n                                                                                                | string\n                                                                                                | undefined;\n                                                                                            title: string;\n                                                                                        },\n                                                                                        index: number,\n                                                                                    ) => {\n                                                                                        return ref.url ? (\n                                                                                            <div\n                                                                                                key={\n                                                                                                    index\n                                                                                                }\n                                                                                            >\n                                                                                                <a\n                                                                                                    href={\n                                                                                                        ref.url\n                                                                                                    }\n                                                                                                    target=\"_blank\"\n                                                                                                    rel=\"noreferrer\"\n                                                                                                >\n                                                                                                    {\n                                                                                                        ref.title\n                                                                                                    }\n                                                                                                </a>\n                                                                                            </div>\n                                                                                        ) : null;\n                                                                                    },\n                                                                                )}\n                                                                            </div>\n                                                                            {index !==\n                                                                                criterias.length -\n                                                                                    1 && <hr />}\n                                                                        </div>\n                                                                    );\n                                                                } else {\n                                                                    return null;\n                                                                }\n                                                            },\n                                                        )}\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    );\n                                })}\n                                <button type=\"submit\" disabled={isSubmitting}>\n                                    Generate report PDF\n                                </button>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            )}\n        </main>\n    );\n};\n\nexport default Form;\n","import Form from '../components/form/form';\n\nconst App = (): JSX.Element => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Accessibility audit tool</h1>\n                <nav></nav>\n            </header>\n            <Form />\n            <footer>footer</footer>\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}